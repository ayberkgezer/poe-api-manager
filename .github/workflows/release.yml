name: Release CI/CD

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v2

      - name: 🟢 Node
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: 🍳 Install dependencies
        run: npm install

      - name: 🧱 Build
        run: npm run build

      - name: 📚 Archive dist folder
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist


  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📚 Checkout repository
        uses: actions/checkout@v2

      - name: 🚀 Get version and release name from package.json
        id: version
        run: echo "::set-output name=version::$(node -e 'console.log(require("./package.json").version)')"
        
      - name: 🚀 Get release name
        id: release_name
        run: echo "::set-output name=release_name::$(node -e 'console.log(require("./package.json").name)')"

      - name: Generate Version
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: ${{ steps.release_name.outputs.release_name }} v${{ steps.version.outputs.version }}
          body: "[CHANGELOG](https://github.com/ayberkgezer/poe-api-manager/blob/main/Changelog.md)"
          draft: false
          prerelease: false
      - run: mkdir dist
      - name: 📥 Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - run : ls
      
      - name: 🧱 Compress files
        run: tar -czvf poe-api-manager.tar.gz dist README.md Changelog.md LICENSE package.json
        
      
      - name: 📦 Sürüm varlıklarını yükle
        id: upload-release-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: poe-api-manager.tar.gz
          asset_name: poe-api-manager.tar.gz
          asset_content_type: application/gzip
